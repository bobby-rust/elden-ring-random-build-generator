import './App.css'
import React from 'react'
import Header from './components/Header'
import 'bootstrap/dist/css/bootstrap.min.css'
import generateRandomBuild from './functions/generateRandomBuild'
import AnalyticsWrapper from './components/AnalyticsWrapper'
import LargeLayout from './layouts/LargeLayout'
import DevMessage from './components/DevMessage'

// add an option to allow the user to keep most of the build but regenerate one item of their choosing.

// Armor piece Redmane knight gauntlets id: 17f693ced0bl0i0oh402gmm7bjbdty description is null

// Could create a random optimized build by searching for a weapon that does the most damage and talismans/incants/etc
// that buff that damage type the most.
// Could do early game, mid game, late game by sorting the weapons by their damage and type and
// Sorting by required attributes for early/mid/late game

function App() {
    // Set up media state
    const [mediaState, setMediaState] = React.useState({
        isLargeMedia: window.matchMedia('(min-width: 1200px)').matches,
    })
    const handler = (e) => setMediaState({ isLargeMedia: e.matches })
    window.matchMedia('(min-width: 1200px)').addEventListener('change', handler)
    // End set up media state

    // Set up layout state
    const [layout, setLayout] = React.useState({
        isLargeLayout: true,
        size: '-lg',
    })
    // End set up layout state

    // Set up button state
    const [buttonState, setButtonState] = React.useState(true)
    // End set up button state

    // color Styling State
    const [isLargeView, setIsLargeView] = React.useState(true)
    const [darkMode, setDarkMode] = React.useState({
        isDarkMode: true,
        color: '',
    }) //
    // End color Styling State

    // Set up items state
    const [build, setBuild] = React.useState(generateRandomBuild()) // 16 items generated by default. Maybe add options to select how many of each item they want to gen.
    // End set up items state

    // Generate new build
    function generateNewBuild() {
        setBuild(generateRandomBuild())

        console.log(buttonState)
    }
    // End generate new build

    // Handle color button toggle
    function handleColorChange() {
        setButtonState(!buttonState)

        if (darkMode.isDarkMode) {
            setDarkMode({ isDarkMode: false, color: '-lt' })
        }
        if (!darkMode.isDarkMode) {
            setDarkMode({ isDarkMode: true, color: '' })
        }
    }

    return (
        <>
            <div className='root'>
                {!mediaState.isLargeMedia && (
                    <div className='mobile-message'>
                        Mobile support coming soon.
                    </div>
                )}

                {mediaState.isLargeMedia && layout.isLargeLayout && (
                    <div className={`App${darkMode.color}`}>
                        <div className="deprecation-informer">You are using the old version. Try out the new version at <a href="https://erbg.vercel.app/" target="_blank" rel="noopener norefferer"> <span style={{ marginLeft: '5px'}}>https://erbg.vercel.app</span></a>!</div>
                        <Header color={darkMode.color} />
                        <LargeLayout
                            color={darkMode.color}
                            build={build}
                            handleColorChange={handleColorChange}
                            buttonState={buttonState}
                            generateNewBuild={generateNewBuild}
                        />
                        <DevMessage />
                    </div>
                )}

                {/* {mediaState.isLargeMedia && !isLargeLayout &&
                <div className={`App${darkMode.color}${}`}
            } */}
                <AnalyticsWrapper />
            </div>
        </>
    )
}

export default App
