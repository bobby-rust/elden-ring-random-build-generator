import './App.css'
import React from 'react'
import Weapons from './components/Weapons'
import Armors from './components/Armors'
import Talismans from './components/Talismans'
import Incantations from './components/Incantations'
import Sorceries from './components/Sorceries'
import Ashes from './components/Ashes'
import Spirits from './components/Spirits'
import StartingClass from './components/StartingClass'
import Header from './components/Header'
import Button from 'react-bootstrap/Button'
import 'bootstrap/dist/css/bootstrap.min.css'
import generateRandomBuild from './functions/generateRandomBuild'
import BootstrapSwitchButton from 'bootstrap-switch-button-react'
import AnalyticsWrapper from './components/AnalyticsWrapper'
// add an option to allow the user to keep most of the build but regenerate one item of their choosing.

// Armor piece Redmane knight gauntlets id: 17f693ced0bl0i0oh402gmm7bjbdty description is null

// Could create a random optimized build by searching for a weapon that does the most damage and talismans/incants/etc 
// that buff that damage type the most.
// Could do early game, mid game, late game by sorting the weapons by their damage and type and
// Sorting by required attributes for early/mid/late game

function App() {
    // Set up media state
    const [mediaState, setMediaState] = React.useState({ isLargeMedia: window.matchMedia("(min-width: 1200px)").matches })
    const handler = e => setMediaState({ isLargeMedia: e.matches })
    window.matchMedia("(min-width: 1200px)").addEventListener('change', handler);
    // End set up media state

    // Set up button state
    const [buttonState, setButtonState] = React.useState(true)
    // End set up button state

    // CSS Styling State
    const [isLargeView, setIsLargeView] = React.useState(true)
    const [darkMode, setDarkMode] = React.useState({ isDarkMode: true, CSS: "" }) // 
    // End CSS Styling State

    // Set up items state
    const [build, setBuild] = React.useState(generateRandomBuild()) // 16 items generated by default. Maybe add options to select how many of each item they want to gen.
    // End set up items state

    // Generate new build
    function generateNewBuild() {
        setBuild(generateRandomBuild())

        console.log(buttonState)
    }
    // End generate new build

    // Handle color button toggle
    function handleColorChange() {
        setButtonState(!buttonState);
        
        if (darkMode.isDarkMode) {
            setDarkMode({ isDarkMode: false, CSS: "-lt" })
        }
        if (!darkMode.isDarkMode) {
            setDarkMode({ isDarkMode: true, CSS: "" })
        }
    }

    return (<>
        <div className='root'>
            {!mediaState.isLargeMedia && <div className="mobile-message">Mobile support coming soon.</div>}
            {mediaState.isLargeMedia &&
            <div className={`App${darkMode.CSS}`}>
                <Header CSS={darkMode.CSS}/>
                <div className='body-container'>
                    <div className={`class-button-container${darkMode.CSS}`}>
                        <div className='toggle-button-container'>
                            <div className='toggle-button-label'>
                                Dark mode
                            </div>
                            <BootstrapSwitchButton
                                checked={buttonState}
                                onstyle='dark'
                                offstyle='light'
                                style='border'
                                width='90'
                                onChange={handleColorChange}
                            />
                        </div>
                        <StartingClass
                            starting_class={build['starting_class']}
                        />
                        <div className='button-container'>
                            <Button
                                className='button-large'
                                onClick={generateNewBuild}
                                variant='danger'
                            >
                                GENERATE NEW BUILD
                            </Button>
                        </div>
                    </div>
                    <Weapons
                        weapons={build['weapons']}
                        shields={build['shields']}
                        CSS={darkMode.CSS}
                    
                    />
                    <Armors armor={build['armor']} CSS={darkMode.CSS}/>
                    <div className={`secondary-items-container${darkMode.CSS}`}>
                        <Sorceries sorcs={build['sorcs']} CSS={darkMode.CSS}/>
                        <Incantations incants={build['incants']} CSS={darkMode.CSS}/>
                        <Talismans talismans={build['talismans']} CSS={darkMode.CSS}/>
                        <div className='ashes-spirits-container'>
                            <Ashes ashes={build['ashes']} CSS={darkMode.CSS}/>
                            <Spirits spirits={build['spirits']} CSS={darkMode.CSS} />
                        </div>
                    </div>
                </div>
                <div className='dev-message-bottom-container'>
                    <p className='dev-message-bottom'>
                        This tool is in development. Some features may not work.
                        There may be missing and/or incorrect data. Submit an
                        issue or make a feature request{' '}
                        <a
                            href='https://github.com/bobby-rust/elden-ring-random-build-generator/issues'
                            target='_blank'
                            rel='noreferrer'
                        >
                            here
                        </a>
                        .
                    </p>
                    <AnalyticsWrapper />
                </div>
                </div>}
            </div>
        </>
    )
}

export default App
